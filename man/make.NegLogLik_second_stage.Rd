% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/log_like_func.R
\name{make.NegLogLik_second_stage}
\alias{make.NegLogLik_second_stage}
\title{Constructor function that creates a negative log-likelihood function with unmaksed data second stage}
\usage{
make.NegLogLik_second_stage(data, fixed = c(FALSE, FALSE, FALSE))
}
\arguments{
\item{data}{generated data}

\item{fixed}{parameters}
}
\value{
negative log-likelihood function for second stage
}
\description{
Constructor function that creates a negative log-likelihood function with unmaksed data second stage
}
\examples{
Data <- data_generation_ver1(n=n, alpha12 = alpha12, beta12 = beta12, alpha13 = alpha13, beta13 = beta13, alpha23 = alpha23, beta23 = beta23, tau = tau, p = p, C_max = C_max, alpha04 = alpha04, beta04 = beta04)
nLL <- make.NegLogLik_first_stage(Data)
initial_parms <- c(alpha12, beta12, alpha13, beta13, p)
estimates <- nlm(nLL, initial_parms)$estimate
alpha12hat = estimates[1]
beta12hat = estimates[2]
alpha13hat = estimates[3]
beta13hat = estimates[4]
cumF101_hat <- cumF101$new(alpha12 = alpha12hat, beta12 = beta12hat, alpha13 = alpha13hat, beta13=beta13hat)
t1 <- Data$t1
F101_hat <- sapply(t1, cumF101_hat$integrate)
pi1<-adaptIntegrate(f10j, lowerLimit=0, upperLimit=20, alphajk=alpha12hat, betajk=beta12hat, alphajl=alpha13hat, betajl=beta13hat)$integral
F101.star.hat.new <- F101_hat/pi1
Data$F101.star.hat <-F101.star.hat.new
nLL2 <- make.NegLogLik_second_stage(Data)
phi <- 2/(1-tau)-2 # parameter of the Clayton copula
initial_parms <- c(0.7,1.3,0.8)
estimates2<-nlm(nLL2, initial_parms)$estimate
print(estimates)
print(estimates2)
}
